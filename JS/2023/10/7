console.log('hello world')
# 
# /* Js의 변수 선언 키워드는 3개
# var, let, const */
# 
# var x; // x라는 식별자로 변수 생성
# console.log(x);
# //왜? 값이 없으니까
# 
# x = 5; // 5를 x에 대입
# console.log(x); // 5 출력
# 
# // 변수를 여러개 선언 및 초기화
# var a = 1, b = 2, c = 3;
# 
# // 선언되지 않은 변수 참조: 참조 에러
# // console.log(y);
# 
# // 호이스팅 - 변수 선언 끌어올림
# /* JS는 실행시 먼저 실행을 위한 환경을
# 구성하기 때문에, 컨텍스트 내의 변수를
# 미리 준비한다.*/
# console.log(t);
# var t;
# 
# // let과 const
# // let은 var와 다르게 호이스팅x
# // console.log(k);
# // 우리는 이제 let과 const만 사용한다.
# let k = 10;
# k = 6;
# console.log(k);
# 
# /* const는 상수 선언
# 초기화와 동시에 값을 대입하고,
# 그 뒤로 변경 불가 */
# const PI = 3.141592;
# PI = 1.414;
# 
# ///////////////////////////////////////////////////////////////
# // 문자열
# 
# // good bye 출력 (latin-1 또는 ASCII)
# let bye = "good \x62\x79\x65";
# console.log(bye);
# 
# // 반가워요! 출력 (4자리 유니코드)
# let hello = "반\uAC00워요!";
# console.log(hello);
# 
# // Read my javascript [책아이콘] 출력
# // 16진수 코드포인트
# let readBook = "Read my Javascript \u{1F4D6}";
# console.log(readBook);
# 
# ///////////////////////////////////////////////////////////////
# // 논리값
# 
# let x = 3;
# 
# let good = (x == 3);
# let bad = (x == 2);
# 
# console.log(good);
# console.log(bad);
# 
# ///////////////////////////////////////////////////////////////
# // 특수한 값 undefined와 null
# 
# var empty;
# console.log(empty); // 의도하지 않은 결과
# empty = null;
# console.log(empty); // 의도한 결과
# 
# ///////////////////////////////////////////////////////////////
# // 심볼
# 
# // 심볼 생성
# let sym1 = Symbol();
# let sym2 = Symbol();
# 
# // Symbol()은 호출할 때마다 새로운 값을 만듦
# console.log(sym1 == sym2);
# 
# // Symbol()에 인수를 전달하면 설명을 덧붗일 수 있음
# let Heart = Symbol("하트")
# console.log(HEART.toString);
# 
# /* Symbol.for 메서드를 활용하면 문자열을 키값으로
# 동일한 심볼을 생성할 수 있다. */
# let sym3 = Symbol.for("club");
# let sym4 = Symbol.for("club");
# console.log(sym3 == sym4);
# 
# // 덧붙이는 설명과는 다르다.
# let sym5 = Symbol("club")
# console.log(sym4 == sym5);
