# 내가만듬(구림) #햄버거만들기
# def solution(ingredient):
#     answer = 0
#     #일단 맨처음부터 봐주기
#     for i in range(len(ingredient) - 3):
#         if ingredient[i:i+4] == [1, 2, 3, 1]:
#             answer += 1
#             # 만들걸 지워주기
#             for x in range(4):
#                 ingredient.pop(i + x)
#     if answer == 0:
#         return answer
#     #지운거에서 계속 봐주기
#     for j in range(4,len(ingredient),4):
#         for z in range(len(ingredient) - 3-j):
#             c = answer


#             if ingredient[z:z+4] == [1, 2, 3, 1]:
#                 answer += 1
#                 for x in range(4):
#                     ingredient.pop(z + x)
#     return answer
# ingredient = [2, 1, 1, 2, 3, 1, 2, 3, 1]
# print(solution(ingredient))
#선생님 답
# def solution(ingredient):
#     making,cnt = [],0
#     for i in ingredient:
#         making.append(i)
#         if len(making) >= 4 and making[-4:] == [1,2,3,1]:
#             del making[-4:]
#             cnt += 1
#     return cnt
# print(solution(ingredient=[2, 1, 1, 2, 3, 1, 2, 3, 1]))
#내가 짠 코드 (망) #문자열나누기
# def solution(s):
#     a,b,answer,judge = 0,0,0, []
#     while s:
#         o = s[0]
#         if len(s) == 1:
#             answer += 1
#             return answer
#         for i in s:
#             if i == o:
#                 a += 1
#                 s = s.replace(i, '',1)
#             else:
#                 b += 1
#                 s = s.replace(i, '',1)
#             if a == b:
#                 answer += 1
#                 break
#    return answer
# print(solution(s = "baaa"))
# 선생님 코드
# def solution(s):
#     cnt = 0
#     x = 0
#     while s:
#         same = 0
#         diff = 0
#         for i in range(len(s)):
#             if s[x] == s[i]:
#                 same += 1
#             else:
#                 diff += 1
#             if same == diff:
#                 cnt +=1
#                 s = s[i+1:]
#                 break
#             if i == len(s)-1:
#                 s = ''
#                 cnt += 1
#     return cnt

#카카오톡 인턴십 크레인인형뽑기게임
def solution(board, moves):
    answer, basket = 0, [-1,-2]
    for i in moves:
        for j in range(len(board)):
            if board[j][i-1] != 0:
                basket.append(board[j][i-1])
                board[j][i-1] = 0
                break
        for x in range(len(basket)):
            if basket[x] == basket[x - 1]:
                basket.pop(x)
                basket.pop(x - 1)
                answer += 1
    answer = answer*2
    return answer
board = [[0, 0, 0, 0, 0],
         [0, 0, 1, 0, 3],
         [0, 2, 5, 0, 1],
         [4, 2, 4, 4, 2],
         [3, 5, 1, 3, 1]]
moves = [1,5,3,5,1,2,1,4]
print(solution(board,moves))
