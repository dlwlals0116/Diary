# import datetime
# class Human:
#     def __init__(self, name,number):
#         #이름 주민번호
#         self.name= name
#         self.number = number
#     def ret_age(self):
#         if self.number[7] == "1" or self.number[7] =="2":
#             age = datetime.date.today().year - (1900 + int(self.number[:2]))
#             return (f"{age}살입니다")
#         else:
#             age = datetime.date.today().year - (2000 + int(self.number[:2]))
#             return (f"{age}살입니다")
#     def ret_gender(self):
#         if  self.number[7] == "1" or self.number[7] =="3":gender = "남자"
#         else: gender = "여자"
#         return (f"{gender}입니다")
#     def relation(self,other):
#         other_name = other.name
#         other_age = other.ret_age()[:3]
#         other_gender = other.ret_gender()[:2]
#         myage = self.ret_age()[:3]
#         myname = self.name
#         mygender = self.ret_gender()[:2]
#         older_info = {("남자","여자"):"오빠", ("남자","남자"):"형", ("여자","남자"):"누나", ("여자","여자"):"언니"}
#         if other_age < myage:
#             relate = older_info[(mygender,other_gender)]
#         elif other_age == myage:
#             relate = "친구"
#         else: relate = "남동생" if mygender == "남자" else "여동생"
#         return f"{myname}은 {other_name}의 {relate}입니다"
# A = Human("박찬빈", "941227-1234567")
# print(A.ret_age())
# print(A.ret_gender())
# B = Human("홍길동", "021113-4321012")
# print(B.ret_age())
# print(B.ret_gender())
#
# print(A.relation(B))
# print(B.relation(A))
# class Rectangle:
#     def __init__(self,x1,y1,x2,y2):
#         self.x1,self.y1,self.x2,self.y2  = x1,y1,x2,y2
#     def ret_width(self):
#         return abs(self.x2 - self.x1)
#     def ret_height(self):
#         return abs(self.y2 - self.y1)
#     def ret_area(self):
#         return self.ret_width()*self.ret_height()
#     def ret_perimeter(self):
#         return 2*(self.ret_width() + self.ret_height())
#     def __gt__(self, other):
#         return self.ret_area() > other.ret_area()
#     def __ge__(self, other):
#         return self.ret_area() >= other.ret_area()
#     def __eq__(self, other):
#         return self.ret_area() == other.ret_area()
#     def __lt__(self, other):
#         return self.ret_area() < other.ret_area()
#     def __le__(self, other):
#         return self.ret_area() <= other.ret_area()
#
#
# A = Rectangle(1,3,4,5)
# B = Rectangle(4,3,8,7)
# print(A.ret_width())
# print(A.ret_area())
# print(A.ret_height())
# print(A.ret_perimeter())
# print(A==B)
# print(A<B)
# print(A>=B)
# print(A<=B)
# print(A>B)
class Koreannum:
    def __init__(self,num):
        self.num = num
    def __int__(self):
        result = 0
        danwi = {"만":10000,"천":1000,"백":100,"십":10}
        number = {"일":1, "이":2,"삼":3,"사":4,"오":5,"육":6,"칠":7,"팔":8,"구":9}
        storage = 0
        cnt = 1
        for i in self.num:
            if i in danwi:
                if storage != 0:
                    result += storage*danwi[i]
                    storage = 0
                    cnt+=1
                else:
                    result += danwi[i]
                    cnt+=1
            else:
                if cnt== len(self.num):
                    result += number[i]
                storage = number[i]
                cnt+=1
        return result
strnum = Koreannum("삼만천삼백칠십삼")
print(int(strnum))
