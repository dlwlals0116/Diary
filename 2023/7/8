# # class test:
# #     def __init__(self):
# #         print("생성자 함수 실행")
# #
# # t = test()
# # d = test()
# # print(t == d)
#
# class Human:
#     def __init__(self,name, age,x):
#         self.name = name
#         self.age = age
#         self.myx = x
#         print("응애응애")
#
#     def who(self):
#         print(f"이름 {self.name}, 나이 {self.age}, 성별 {self.myx}")
#
#     def setinfo(self,name,age,sex):
#         self.name = name
#         self.age = age
#         self.myx = sex
#     def __del__(self):
#         print("내 죽음을 적에게 알리지 말라")
#     def __repr__(self):
#         return f"제 이름은 {self.name}이고 나이는 {self.age}인 {self.myx}입니다"
# areum = Human("아름", 25, "여자")
# print(areum.myx)
# del areum
# class stock:
#     def __init__(self,name, code,PER, PBR,배당수익률):
#         self.name = name
#         self.code = code
#         self.PER = PER
#         self.PBR = PBR
#         self.dividend = 배당수익률
#     def set_name (self, name):
#         self.name = name
#     def set_code(self, code):
#         self.code = code
#     def set_per(self, code):
#         self.PER= code
#     def set_pbr(self, code):
#         self.PBR = code
#     def set_dividend(self, code):
#         self.dividend = code
#
#
# # Object = stock("삼성전자",'005930',15.79, 1.33, 2.83)
# # print(Object.dividend)
#
# 삼성 = stock("삼성전자",'005930',15.79, 1.33, 2.83)
# 현대차 = stock("현대차",'005380',8.70,0.35,4.27)
# LG전자 = stock("LG전자",'066570', 317.34,0.69,1.37)
#
# company = []
# company.append(삼성)
# company.append(현대차)
# company.append(LG전자)
# for i in company:
#     print(i.code)
#     print(i.PER)
class Account:
    cnt = 0
    def __init__(self, 예금주, 초기잔액):
        self.bankname = "SC은행"
        self.account_number = "111-11-111111"
        self.owner = 예금주
        self.balance = 초기잔액
        Account.cnt += 1

    @classmethod
    def get_account_num(cls):
        print(cls.account_count)  # Account.account_count
    def deposit(self, amount):
        if amount >=1:
            self.balance += amount
        else:
            print("1원 이상의 금액만 입급할 수 있습니다")
    def withdraw(self, amount):
        if amount > self.balance:
            print(f"잔액이 부족합니다. 현재잔액: {self.balance}")
        else:
            self.balance -= amount
            print(f"출금이 완료되었습니다. 현재잔액: {self.balance}")
    def info(self):
        print(f"은행: {self.bankname}")
        print(f"계좌번호: {self.account_number}")
        print(f"예금주: {self.owner}")
        money = ""
        cnt = 0
        for i in reversed(str(self.balance)):
            cnt+=1
            if cnt%3 ==0:money+= ","
            money += i
        print(f"잔액: {money}")


kim = Account("김민수", 100)
lee = Account("이민수", 100)
kim.get_account_num()

kim = Account("김민수", 100)
print(Account.cnt)
park = Account("박찬빈",200)
print(Account.cnt)
lee = Account("이영표",300)
print(Account.cnt)
