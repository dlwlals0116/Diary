# def bubble_sort(_list: list):
#     for i in range(len(_list)-1):            #반복사이클은 원소개수 -1번
#         for j in range(len(_list)-1 -i):     #2개씩 비교하므로 -1, 사이클마다 반복횟수 감소 -1
#             if _list[j] > _list[j+1]:        #
#                 tmp = _list[j]               # 교환하기 위한 빈 그릇 tmp 생성
#                 _list[j] = _list[j+1]
#                 _list[j+1] = tmp
#
# List_A = [3,7,2,9,1,5,6,4,8]
# bubble_sort(List_A)
# print(List_A)

# def selection_sort(_list:list):
#     for i in range(len(_list)-1):    # i = 0 ~7
#         least = 1                    #최소값을 찾을 변수 least = 값이 아니라 자리를 기억
#         for j in range( i +1, len(_list)): # 가장 좌측에 최소값이 오기때문에 시작 범위를 i +1로 잡았다
#             if _list[least] > _list[j]:#리스트[j]가 더 작을 경우 최소값으로 위치기억
#                 least = j
#         tmp = _list[i]                   #리스트[i]와 리스트[least]를 교환0
#         _list[i] = _list[least]
#         _list[least] = tm
#
#
# List_A = [3,7,2,9,1,5,6,4,8]
# selection_sort(List_A)

def insertion_sort(_list: list):
    #삽입정렬 알고리즘
    #1. 리스트 A가 주어질 때, A[i]를 1번 인덱스부터 시작하여 n-1까지 지정한다.
    #2. 현재위치(i)를  key값으로 저장하고, j를 i의 바로 왼쪽 위치로 정한다.
    #3. A[j]번째와 key값을 비교해 key를 삽입할 위치를 찾는다. (A[j]가 key값보다 크고, j는 0보다 클때까지 j번째 값을 이동한다. == 삽입할 공간을 만들기 위해 한칸씩 오른쪽으로 이동시킨다.
    #4. 삽입할 위치를 찾았다면 key값을 넣어준다
     for i in range(1, len(_list)):  #i를 1부터 n-1까지
         key = List_A[i]             #현재위치를 key값으로 저장
         j =i-1                      #j는 1의 바로
         while _list[j] > key and j >= 0:  #key값과 j를 비교해 적절한 위치를 찾는다
             _list[j+1] = _list[J]   #적절한 위치를 찾을때 까지 j를 우측으로 욺김
             j = j-1
             _list[j+1] = key  #찾은 위치에 key값을 저장
     return _list
List_A = [3, 7, 2, 9, 1, 5, 6, 4, 8]
insertion_sort(List_A)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

# List_A = [1,2,3,4,5,6,7,8,9]

# List_A = [3,7,2,9,1,5,6,4,8]

# 사이클 1 = [3,2,7,1,5,6,4,8,9]

# 사이클 2 = [2,3,1,5,6,4,7,8,9]

# 사이클 3 = [2,1,3,5,4,6,7,8,9]

# 사이클 4 = [1,2,3,4,5,6,7,8,9]


# List_A = [3,7,2,9,1,5,6,4,8]
#
# def bobble_sort(_list: list):       # 반복 사이클은 원소  개수 -1번
#     for i in range(len(_list)-1):    # 2개씩 비교하므로 -1, 사이클마다 반복횟수 -i
#         for j in range(len(_list)-1 -i):
#             if _list[j] > _list[j+1]:
#                 tmp = _list[j]           # 교환하기 위한 빈 그릇 tmp 생성
#                 _list[j] = _list[j+1]
#                 _list[j+1] = tmp


# bobble_sort(List_A)
# print(List_A)

# 선택정렬

# List_A = [3,7,2,9,1,5,6,4,8]
# 사이클 1 [1,7,2,9,3,5,6,4,8]
# 사이클 2 [1,2,7,9,3,5,6,4,8]
# 사이클 3 [1,2,3,9,7,5,6,4,8]
