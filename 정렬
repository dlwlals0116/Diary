def bubble_sort(_list: list, reverse = True):
#     if reverse:
#         for i in range(len(_list) - 1):
#             for j in range(len(_list) - 1 - i):
#                 if _list[j] < _list[j + 1]:
#                     tmp = _list[j]
#                     _list[j] = _list[j + 1]
#                     _list[j + 1] = tmp
#
#
#     else:
#         for i in range(len(_list) - 1):
#             for j in range(len(_list) - 1 - i):
#                 if _list[j] > _list[j + 1]:
#                     tmp = _list[j]
#                     _list[j] = _list[j + 1]
#                     _list[j + 1] = tmp
#
# a = list(input())
# for i in range(len(a)):
#     a[i] = int(a[i])
#
# bubble_sort(a,reverse=True)
# for i in a:
#     print(i, end = '')
#
# def solution(array, commands):
#     i, j, k = [], [], []
#     answer = []
#     for x in range(len(commands)):
#         i.append(commands[x][0])
#         j.append(commands[x][1])
#         k.append(commands[x][2])
#
#         for y in range(len(commands)):
#             parts = array[i-1 : j]
#             parts.sort()
#             answer.append(parts[k[y]-1])
#
#
#         return answer
# array = [1,5,2,6,3,7,4]
# commands = [2,5,3], [5,4,7], [3,1,3]
# solution()

def solution(citations):
    answer = 0
    citations.sort()
    for h in range(1,len(citations)+1):
        cnt_h = 0
        cnt_l = 0
        for i in citations:
            if i >= h :
                cnt_h += 1
            elif i <= h:
                cnt_l += 1
            if cnt_h >= h and cnt_l <= h and answer <h:
                answer = h
    return answer

c = [3, 0, 6, 1, 5]
print(solution(c))
